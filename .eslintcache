[{"/home/lumicajo27/MagicT-RG/client/src/index.js":"1","/home/lumicajo27/MagicT-RG/client/src/App.js":"2","/home/lumicajo27/MagicT-RG/client/src/pages/Event/EditEvent.jsx":"3","/home/lumicajo27/MagicT-RG/client/src/services/authPlayer.js":"4","/home/lumicajo27/MagicT-RG/client/src/services/events.js":"5","/home/lumicajo27/MagicT-RG/client/src/utils/paths.js":"6","/home/lumicajo27/MagicT-RG/client/src/pages/LogIn.jsx":"7","/home/lumicajo27/MagicT-RG/client/src/pages/ProtectedPage.jsx":"8","/home/lumicajo27/MagicT-RG/client/src/pages/NotFound.jsx":"9","/home/lumicajo27/MagicT-RG/client/src/pages/Event/NewEvent.jsx":"10","/home/lumicajo27/MagicT-RG/client/src/pages/Event/AllEvents.jsx":"11","/home/lumicajo27/MagicT-RG/client/src/pages/HomePage/HomePage.jsx":"12","/home/lumicajo27/MagicT-RG/client/src/pages/User/EditPlayer.jsx":"13","/home/lumicajo27/MagicT-RG/client/src/routing-components/NormalRoute.jsx":"14","/home/lumicajo27/MagicT-RG/client/src/pages/User/PlayerProfile.jsx":"15","/home/lumicajo27/MagicT-RG/client/src/routing-components/ProtectedRoute.jsx":"16","/home/lumicajo27/MagicT-RG/client/src/pages/Event/SingleEvent.jsx":"17","/home/lumicajo27/MagicT-RG/client/src/pages/User/OrganizerProfile.jsx":"18","/home/lumicajo27/MagicT-RG/client/src/components/Navbar/Navbar.jsx":"19","/home/lumicajo27/MagicT-RG/client/src/pages/User/EditProfileOrganizer.jsx":"20","/home/lumicajo27/MagicT-RG/client/src/pages/SignUp/Signup.jsx":"21","/home/lumicajo27/MagicT-RG/client/src/components/Loading/index.jsx":"22","/home/lumicajo27/MagicT-RG/client/src/components/attendButton/Attend.jsx":"23","/home/lumicajo27/MagicT-RG/client/src/components/ListComments/ListComments.jsx":"24","/home/lumicajo27/MagicT-RG/client/src/services/authOrganizer.js":"25","/home/lumicajo27/MagicT-RG/client/src/services/userPlayer.js":"26","/home/lumicajo27/MagicT-RG/client/src/services/userOrganizer.js":"27","/home/lumicajo27/MagicT-RG/client/src/services/cardsService.js":"28","/home/lumicajo27/MagicT-RG/client/src/components/Event/EventR.jsx":"29","/home/lumicajo27/MagicT-RG/client/src/services/comments.js":"30"},{"size":312,"mtime":1607440003111,"results":"31","hashOfConfig":"32"},{"size":5257,"mtime":1607967146522,"results":"33","hashOfConfig":"32"},{"size":4404,"mtime":1608053200155,"results":"34","hashOfConfig":"32"},{"size":1683,"mtime":1607698739714,"results":"35","hashOfConfig":"32"},{"size":3107,"mtime":1608028018689,"results":"36","hashOfConfig":"32"},{"size":423,"mtime":1607698739610,"results":"37","hashOfConfig":"32"},{"size":3854,"mtime":1607967146530,"results":"38","hashOfConfig":"32"},{"size":174,"mtime":1607440003121,"results":"39","hashOfConfig":"32"},{"size":133,"mtime":1607698739594,"results":"40","hashOfConfig":"32"},{"size":3439,"mtime":1607934091761,"results":"41","hashOfConfig":"32"},{"size":5259,"mtime":1607975641037,"results":"42","hashOfConfig":"32"},{"size":381,"mtime":1607975641038,"results":"43","hashOfConfig":"32"},{"size":2902,"mtime":1608053200156,"results":"44","hashOfConfig":"32"},{"size":549,"mtime":1607698739602,"results":"45","hashOfConfig":"32"},{"size":1878,"mtime":1608053200160,"results":"46","hashOfConfig":"32"},{"size":674,"mtime":1607698739603,"results":"47","hashOfConfig":"32"},{"size":3330,"mtime":1608128698644,"results":"48","hashOfConfig":"32"},{"size":3147,"mtime":1608128698646,"results":"49","hashOfConfig":"32"},{"size":1748,"mtime":1607975641036,"results":"50","hashOfConfig":"32"},{"size":3509,"mtime":1608128607511,"results":"51","hashOfConfig":"32"},{"size":6885,"mtime":1608128607509,"results":"52","hashOfConfig":"32"},{"size":344,"mtime":1607440003123,"results":"53","hashOfConfig":"32"},{"size":362,"mtime":1607779046693,"results":"54","hashOfConfig":"32"},{"size":1843,"mtime":1608128698642,"results":"55","hashOfConfig":"32"},{"size":1165,"mtime":1607698739605,"results":"56","hashOfConfig":"32"},{"size":1973,"mtime":1607698739609,"results":"57","hashOfConfig":"32"},{"size":1683,"mtime":1607698739607,"results":"58","hashOfConfig":"32"},{"size":786,"mtime":1608053200162,"results":"59","hashOfConfig":"32"},{"size":535,"mtime":1608053200154,"results":"60","hashOfConfig":"32"},{"size":973,"mtime":1607967146536,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1nnzazd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lumicajo27/MagicT-RG/client/src/index.js",[],["127","128"],"/home/lumicajo27/MagicT-RG/client/src/App.js",[],"/home/lumicajo27/MagicT-RG/client/src/pages/Event/EditEvent.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/services/authPlayer.js",[],"/home/lumicajo27/MagicT-RG/client/src/services/events.js",[],"/home/lumicajo27/MagicT-RG/client/src/utils/paths.js",[],"/home/lumicajo27/MagicT-RG/client/src/pages/LogIn.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/ProtectedPage.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/NotFound.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/Event/NewEvent.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/Event/AllEvents.jsx",["129"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { getAllEvents } from \"../../services/events\";\nimport \"./Allevents.css\";\nimport { Link } from \"react-router-dom\";\nimport LoadingComponent from \"../../components/Loading\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport \"./Allevents.css\";\nimport turf from \"turf\";\n\nconst AllEvents = (props) => {\n  const [userPosition, setUserPosition] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [viewport, setViewport] = useState({\n    latitude: 41.1496,\n    longitude: -8.61099,\n    zoom: 5,\n    bearing: 0,\n    pitch: 30,\n  });\n\n  const mapRef = useRef();\n  const geocoderContainerRef = useRef();\n\n  useEffect(() => {\n    console.log(\"mount\");\n\n    getAllEvents().then((events) => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userPosition = [\n          position.coords.latitude,\n          position.coords.longitude,\n        ];\n        setUserPosition(userPosition);\n        const eventsWithDistance = events.map((event) => {\n          let from = {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: userPosition,\n            },\n          };\n          let to = {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: [event.lat, event.long],\n            },\n          };\n\n          let distance = turf.distance(from, to, \"kilometers\");\n          return { ...event, distance: distance, going: event.players.length };\n        });\n        setEvents(eventsWithDistance);\n        setLoading(false);\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"eventsPage\">\n      <div className=\"leftPannel\">\n        {loading ? (\n          <LoadingComponent />\n        ) : (\n          <>\n            <h2>Closest to Me 🧞‍♂️</h2>\n            <div className=\"cardRow\">\n              {events\n                .sort((a, b) => a.distance - b.distance)\n                .map((el) => (\n                  <Link to={`/event/${el._id}`}>\n                    <div className=\"eventCard\">\n                      <p>{el.name}</p>\n                      <p>Going: {el.going}</p>\n                      <p>{el.format}</p>\n                      <p>{Math.round(el.distance)} Km</p>\n                    </div>\n                  </Link>\n                ))}\n            </div>\n            <h2>Trending 🌶</h2>\n            <div className=\"cardRow\">\n              {events\n                .sort((a, b) => b.going - a.going)\n                .map((el) => (\n                  <Link to={`/event/${el._id}`}>\n                    <div className=\"eventCard\">\n                      <p>{el.name}</p>\n                      <p>Going: {el.going}</p>\n                      <p>{el.format}</p>\n                    </div>\n                  </Link>\n                ))}\n            </div>\n            <h2>Starting Soon 😱</h2>\n            <div className=\"cardRow\">\n              {events\n                .sort((a, b) => new Date(a.date) - new Date(b.date))\n                .map((el) => (\n                  <Link to={`/event/${el._id}`}>\n                    <div className=\"eventCard\">\n                      <p>{el.name}</p>\n                      <p>Going: {el.going}</p>\n                      <p>{el.format}</p>\n                      <p>{new Date(el.date).toISOString().substring(12, 16)}</p>\n                      <p>{new Date(el.date).toISOString().substring(0, 10)}</p>\n                    </div>\n                  </Link>\n                ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"rightPannel\">\n        <div\n          ref={geocoderContainerRef}\n          style={{ position: \"relative\", top: 20, left: 0, zIndex: 0 }}\n        />\n        <ReactMapGL\n          {...viewport}\n          ref={mapRef}\n          onViewportChange={(nextViewport) => setViewport(nextViewport)}\n          width=\"100%\"\n          height=\"100vh\"\n          mapStyle={\"mapbox://styles/mapbox/basic-v9\"}\n          mapboxApiAccessToken={\n            \"pk.eyJ1IjoieGlreiIsImEiOiJja2luMWxod3owa2VrMnhxczF3cHo0Y2FpIn0.6EG6l8fbS8yp3vNXmZBJlA\"\n          }\n        >\n          <Geocoder\n            mapRef={mapRef}\n            // containerRef={geocoderContainerRef}\n            onViewportChange={(nextViewport) => setViewport(nextViewport)}\n            mapboxApiAccessToken={\n              \"pk.eyJ1IjoieGlreiIsImEiOiJja2luMWxod3owa2VrMnhxczF3cHo0Y2FpIn0.6EG6l8fbS8yp3vNXmZBJlA\"\n            }\n            position=\"top-left\"\n          />\n\n          {events &&\n            events.map((event) => (\n              <Marker\n                latitude={Number(event.lat)}\n                longitude={Number(event.long)}\n                offsetLeft={-20}\n                offsetTop={0}\n              >\n                <div className=\"eventImage\">\n                  <img src=\"../../../images/eventicon.png\" alt=\"event icon\" />\n                </div>\n              </Marker>\n            ))}\n        </ReactMapGL>\n      </div>\n    </div>\n  );\n};\n\nexport default AllEvents;\n","/home/lumicajo27/MagicT-RG/client/src/pages/HomePage/HomePage.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/User/EditPlayer.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/routing-components/NormalRoute.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/User/PlayerProfile.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/routing-components/ProtectedRoute.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/Event/SingleEvent.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/User/OrganizerProfile.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/components/Navbar/Navbar.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/pages/User/EditProfileOrganizer.jsx",["130","131"],"import React from \"react\";\nimport {\n  getOrganizerProfile,\n  updateOrganizerProfile,\n} from \"../../services/userOrganizer\";\nimport \"./EditProfileOrganizer.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { AccountCircle, Email, LocationOn } from \"@material-ui/icons\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nexport default class EditProfileOrganizer extends React.Component {\n  state = {\n    user: this.props.user,\n  };\n\n  componentDidMount = () => {\n    getOrganizerProfile(this.props.match.params.username).then(\n      (responseBack) => {\n        if (responseBack.user === null) {\n          return this.props.history.push(\"/page-no-found\");\n        }\n        this.setState({ user: responseBack });\n      }\n    );\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      user: {\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    updateOrganizerProfile(\n      this.props.match.params.username,\n      this.state.user\n    ).then((res) => {\n      if (!res.status) {\n        //  deal with the error\n        return;\n      }\n\n      this.props.authenticate(res.data.userUpdated);\n      this.setState({ user: res.data.userUpdated });\n      this.props.history.push(\n        `/user/organizer/${res.data.userUpdated.username}`\n      );\n    });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"editOrganizerPage\">\n        <form className=\"profileForm\" onSubmit={this.handleSubmit}>\n          <div className=\"titleForm\">\n            <p>Edit Profile</p>\n          </div>\n          <div className=\"bodyForm\">\n            <TextField\n              id=\"filled-multiline-flexible\"\n              label=\"Username\"\n              name=\"username\"\n              multiline\n              value={this.state.user.username}\n              onChange={this.handleChange}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              id=\"filled-multiline-flexible\"\n              label=\"email\"\n              name=\"email\"\n              multiline\n              value={this.state.user.email}\n              onChange={this.handleChange}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Email />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              id=\"filled-multiline-flexible\"\n              label=\"location\"\n              name=\"location\"\n              multiline\n              value={this.state.user.location}\n              onChange={this.handleChange}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LocationOn />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <button className=\"submitButton\" type=\"submit\">\n              SUBMIT\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","/home/lumicajo27/MagicT-RG/client/src/pages/SignUp/Signup.jsx",["132","133","134"],"import React, { Component } from \"react\";\nimport { signup } from \"../../services/authPlayer\";\nimport { signupOrg } from \"../../services/authOrganizer\";\n//import \"./SignUp.css\";\nimport { Redirect } from \"react-router-dom\";\nimport * as PATHS from \"../../utils/paths\";\nimport \"./SignUp.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { AccountCircle, Email, LockOpen } from \"@material-ui/icons\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    usertype: \"Player\",\n    error: null,\n    showPassword: false,\n  };\n\n  handleClick = (event) => {\n    if (this.state.usertype === \"Player\") {\n      this.setState({ usertype: \"Organizer\" });\n    } else {\n      this.setState({ usertype: \"Player\" });\n    }\n  };\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // If the state of Usertype is Player the form will be sumit here\n  handleFormSubmissionasPlayer = (event) => {\n    event.preventDefault();\n    const credentials = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    };\n    signup(credentials).then((res) => {\n      console.log(res);\n      if (!res.status) {\n        //set state for the error message from the server\n        this.setState({ error: res.errorMessage });\n        return <Redirect to={PATHS.SIGNUPPAGE} />;\n      }\n      localStorage.setItem(\"accessToken\", res.data.accessToken);\n      localStorage.setItem(\"userType\", res.data.user.userType);\n      this.props.authenticate(res.data.user);\n      this.props.history.push(`/user/player/${res.data.user.username}`);\n    });\n  };\n\n  // If the state of Usertype is Organizer the form will be sumit here\n\n  handleFormSubmissionasOrganizer = (event) => {\n    event.preventDefault();\n    const credentials = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    };\n    signupOrg(credentials).then((res) => {\n      console.log(res);\n      if (!res.status) {\n        //set state for the error message from the server\n        this.setState({ error: res.errorMessage });\n        return <Redirect to={PATHS.SIGNUPPAGE} />;\n      }\n      localStorage.setItem(\"accessToken\", res.data.accessToken);\n      localStorage.setItem(\"userType\", res.data.user.userType);\n\n      this.props.authenticate(res.data.user);\n      this.props.history.push(`/user/organizer/${res.data.user.username}`);\n    });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    // Render the button for the Player or the Organizer with the OnSubmit Handler\n    let button;\n    let handler;\n    if (this.state.usertype === \"Player\") {\n      button = (\n        <>\n          <div>\n            <img\n              src=\"../../../images/goblin2.png\"\n              style={{ height: \"100px\" }}\n            />\n          </div>\n          <button className=\"userControllerButton\" onClick={this.handleClick}>\n            Join as an Organizer?\n          </button>\n        </>\n      );\n      handler = this.handleFormSubmissionasPlayer;\n    } else {\n      button = (\n        <>\n          <div>\n            <img\n              src=\"../../../images/goblin3.png\"\n              style={{ height: \"100px\" }}\n            />\n          </div>\n          <button className=\"userControllerButton\" onClick={this.handleClick}>\n            Join as a Player?\n          </button>\n        </>\n      );\n      handler = this.handleFormSubmissionasOrganizer;\n    }\n    return (\n      <div className=\"Signup\">\n        <form onSubmit={handler} className=\"auth__form\">\n          <h1 style={{ margin: \"0px\" }}>Sign Up</h1>\n\n          {this.state.usertype === \"Player\" ? (\n            <h3>... as a Player!</h3>\n          ) : (\n            <h3>... as an Organizer!</h3>\n          )}\n\n          {button}\n\n          <TextField\n            style={{ margin: \"10px 0px\" }}\n            id=\"filled-multiline-flexible\"\n            name=\"username\"\n            placeholder=\"Userame\"\n            multiline\n            required\n            value={this.state.username}\n            onChange={this.handleInputChange}\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            style={{ margin: \"10px 0px\" }}\n            id=\"filled-multiline-flexible\"\n            name=\"email\"\n            placeholder=\"Email\"\n            multiline\n            required\n            value={this.state.email}\n            onChange={this.handleInputChange}\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Email />\n                </InputAdornment>\n              ),\n            }}\n          />\n          {/* <InputLabel required shrink htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel> */}\n          <Input\n            style={{ margin: \"10px 0px\" }}\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            label=\"With normal TextField\"\n            id=\"standard-adornment-password\"\n            type={this.state.showPassword ? \"text\" : \"password\"}\n            value={this.state.password}\n            onChange={this.handleInputChange}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <LockOpen />\n              </InputAdornment>\n            }\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                  onMouseDown={this.handleMouseDownPassword}\n                >\n                  {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n\n          {this.state.error && (\n            <div className=\"error-block\">\n              <p>{this.state.error}</p>\n            </div>\n          )}\n\n          <button className=\"submitButton\" type=\"submit\">\n            SIGN UP\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","/home/lumicajo27/MagicT-RG/client/src/components/Loading/index.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/components/attendButton/Attend.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/components/ListComments/ListComments.jsx",["135","136"],"import React, { Component,  useEffect, useRef  } from 'react';\nimport { getComments } from '../../services/comments';\nimport { addComment } from '../../services/comments';\nimport LoadingComponent from '../Loading';\nimport \"./ListComments.css\"\n\n\nexport default class ListComments extends Component {\n\n  state = {\n    comments:null,\n    loading: true,\n    comment: '',\n    }\n\n    async loadComments() {\n      getComments(this.props.eventid).then((res) => {\n        this.setState({comments:res.data, loading: false,})\n})\n    }\n   \n   componentDidMount = ()=>{\n this.loadComments()\n   }\n\n   handleChange = (event) => {\n    this.setState({\n      comment: event.target.value,\n    });\n  };\n\n\n handleSubmmit = (e) => {\n   e.preventDefault();\n   const comment = {\n       comment : this.state.comment,\n       username: this.props.user.username,\n       eventInfo:this.props.eventInfo._id\n   }\n  addComment(comment).then((res) => {\n  if (!res.status) {\n    // deal with the error\n    return;\n  }\n  this.setState({comment:''})\n  this.loadComments();\n\n});\n  }\n\n\n  render() {\n    let comments= this.state.comments\n    if (this.state.loading) {\n        return <LoadingComponent />;\n      }\n    return (\n      <div className=\"chat\">\n      <div className=\"display\">\n      {this.state.comments ? comments.map((e)=> <div key={e._id} className=\"comment\">\n      <h4>{e.author}</h4>\n      <p>{e.body}</p>\n      </div>):<h2>No comments</h2>}\n      </div>\n      <div >\n        <form onSubmit={this.handleSubmmit} className=\"new-comment\" >\n        <textarea rows=\"5\" cols=\"55\"\n        maxLength='180'\n          type=\"text\"\n          name=\"comment\"\n          value={this.state.comment}\n          onChange={this.handleChange}\n          placeholder=\"New comment\"\n        />\n        <button>Submit Comment</button>\n        </form>\n        </div>\n        </div>\n    );\n  }\n}","/home/lumicajo27/MagicT-RG/client/src/services/authOrganizer.js",[],"/home/lumicajo27/MagicT-RG/client/src/services/userPlayer.js",[],"/home/lumicajo27/MagicT-RG/client/src/services/userOrganizer.js",[],"/home/lumicajo27/MagicT-RG/client/src/services/cardsService.js",[],"/home/lumicajo27/MagicT-RG/client/src/components/Event/EventR.jsx",[],"/home/lumicajo27/MagicT-RG/client/src/services/comments.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":13,"column":10,"nodeType":"143","messageId":"144","endLine":13,"endColumn":22},{"ruleId":"141","severity":1,"message":"145","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":18},{"ruleId":"141","severity":1,"message":"146","line":15,"column":8,"nodeType":"143","messageId":"144","endLine":15,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":103,"column":13,"nodeType":"149","endLine":106,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":118,"column":13,"nodeType":"149","endLine":121,"endColumn":15},{"ruleId":"141","severity":1,"message":"150","line":1,"column":29,"nodeType":"143","messageId":"144","endLine":1,"endColumn":38},{"ruleId":"141","severity":1,"message":"151","line":1,"column":40,"nodeType":"143","messageId":"144","endLine":1,"endColumn":46},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'userPosition' is assigned a value but never used.","Identifier","unusedVar","'Input' is defined but never used.","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]